正则表达式

捕获组

正则表达式语法

Matcher类的方法： 
              索引方法；
              研究方法；
              替换方法；
              start，end 方法；
              matches,lookingAt方法；    
              repalceFirst,replaceAll方法；
              appendReplacement,appendTail方法；


PatternSnytaxException类


正则表达式语法：
其他语言中： \ 表示转义字符 \\表示一个转义字符 '\';
Java中： \\和其他语言中"\"等价；\\\\ 转义字符 '\'；\\(匹配 (

^ ：匹配输入字符串开始的位置
$ ：匹配输入字符串结束的位置
* ：0次或多次匹配前面字符或子表达式(>=0){0,}
+ ：1次或多次匹配前面字符或子表达式（>=1）{1,}
？：0次或1匹配前面字符或子表达式(0 or 1){0,1}
(pattern)  ： 匹配pattern,并捕获该匹配的子表达式
(？：pattern)  ：匹配pattern,但不捕获该匹配的子表达式 ，与后面 or(|) 有关，
x|y  ：匹配 x 或者 y
(？=pattern)  ：执行正向预测先行搜索的子表达式  ？？？？？？
(？！pattern)  ：执行反向预测先行搜索的子表达式 ？？？？？？
[xyz] ：字符集，匹配包含的任一字符
[^xyz] :反向字符集，匹配未包含的任何字符
[a-z]:字符范围，匹配a-z 的任何字符
[^a-z]:反向字符范围，匹配，非a-z的任何字符
\b: 匹配一个字符边界
\B ：非字边界匹配

