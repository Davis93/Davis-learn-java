正则表达式

捕获组

正则表达式语法

Matcher类的方法： 
              索引方法；
              public int start/start(int group);public int end/end(int group)
              
              研究方法； 检查字符串，并返回一个boolean值
              public boolean lookingAt(); public boolean find/find(int start);public boolean matches()
            
             替换方法；
            (1) 实现非终端添加和替换步骤 public Matcher appendRepalcement(StringBuffer sb,String replacement)   ？？？？？
            (2)实现终端添加和替换步骤。 public StringBuffer appendTail(StringBuffer sb)   ？？？？？？
            (3)public String replaceAll(String repacement)  
            (4)public String replaceFirst(String replace)
            (5)public static String quoteRepalcement(String s) ？？？？？？？？？
              start，end 方法；
              matches,lookingAt方法；    matches方法要求全都匹配；lookinAt要求从第一个字符开始匹配
              repalceFirst,replaceAll方法；
              appendReplacement,appendTail方法；


PatternSnytaxException类


正则表达式语法：
其他语言中： \ 表示转义字符 \\表示一个转义字符 '\';
Java中： \\和其他语言中"\"等价；\\\\ 转义字符 '\'；\\(匹配 (

^ ：匹配输入字符串开始的位置
$ ：匹配输入字符串结束的位置
* ：0次或多次匹配前面字符或子表达式(>=0){0,}
+ ：1次或多次匹配前面字符或子表达式（>=1）{1,}
？：0次或1匹配前面字符或子表达式(0 or 1){0,1}
(pattern)  ： 匹配pattern,并捕获该匹配的子表达式
(？：pattern)  ：匹配pattern,但不捕获该匹配的子表达式 ，与后面 or(|) 有关，
x|y  ：匹配 x 或者 y
(？=pattern)  ：执行正向预测先行搜索的子表达式   匹配的是pattern里面的字符串
(？！pattern)  ：执行反向预测先行搜索的子表达式  匹配的不是pattern内的字符串
[xyz] ：字符集，匹配包含的任一字符
[^xyz] :反向字符集，匹配未包含的任何字符
[a-z]:字符范围，匹配a-z 的任何字符
[^a-z]:反向字符范围，匹配，非a-z的任何字符
\b: 匹配一个字符边界
\B ：非字边界匹配

\cx: 如cC=control C 复制；x范围：a-z or A-Z;

\d ： 数字匹配[0-9]
\D ：等价于[^0-9]
\f ：换页符
\n: 换行符
\r :回车
\s :空格
\S :非空格
\t :一个Tab
\v :垂直制表符

\w: 匹配任何字类字符，包括下划线 [a-zA-Z0-9_]
\W :[^a-zA-Z0-9_]等价
. :匹配任意一个字符，如 a 或 1

\u00A9 匹配版权符号：©








