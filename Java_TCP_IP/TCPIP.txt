TCP: TransmissionControl Protocol:传输层
IP:Internet Protocol：网络层
 TCP/IP 结构 ：   应用层-->传输层-->网络层-->网络接口层
 OSI(open system Interconnection)模型： 应用层-->表示层-->会话层-->传输层-->网络层-->网络链路层-->物理层
 1).应用层：应用程序间沟通，WWW(80),SMTP(25)，FTP(21)，Telnet(23)
 2).传输层：提供节点间数据传输，应用程序间通信，功能：数据格式化，数据确认，丢失重传等。主要协议包括TCP，和UDP(user datagram protocol,用户数据报)
 3).网络层：负责提供基本的数据包封包传送功能，让每个数据包都能到达目的主机，但是不检查是否被正确接收，主要体现为IP协议
 4).网络接口层：接收IP数据报 并进行传输，从网络上接受物理帧，抽取IP数据报转交给下一层，对实际的网络媒体的管理，定义如何使用网络，如以太网
 
 
 TCP协议：
        目前使用最多的传输控制协议，广泛应用于互联网；TCP是一种面向连接的，可靠的，基于字节流的传输层通信协议。TCP位于应用层之下，网络层之上。TCP给不同的应用层之间提供可靠的，像管道一样的连接。应用层会向TCP发生8字节的数据流，TCP把数据流分割成适当长度发报文段，TCP把结果包传送给IP层，通过网络将包传送给接收端的TCP层。TCP为了保证不发生丢包，采用一种精准的确认机制，一旦发送失败，就提供重传机会，可以保证数据的可靠传输。
 
 
 IP协议：
        本地网络（协议）接口，在源地址和目的地址间传送数据包；将多个包交换网络连接起来，在源地址和目的地址之间传送数据包，提供了对数据大小的重新组装功能，以适应不同网络对包大小的要求。
        IP不提供可靠的传输服务，不提供端到端的或者（路由）节点到（路由）节点的确认，对数据没有差错控制，只使用报头的校验码，不提供重发和流量控制。如果出错可以通过ICMP报告，ICMP在IP模块中实现。
 
 
 UDP协议（user datagram protocol，用户数据报协议，OSI模型中传输层)
       是一种无连接的传输层协议，题目面向事物的简单不可靠消息传送服务。 UDP不提供数据包分组，组装，不能对数据包进行排序即当报文发送之后，无法得知其是否安全，完整送达。UDP主要作用是将网络数据流量压缩成数据包的形式。一个典型数据包就是一个二进制数据的传输单位。每一个数据包的前8个字节用来包含报头信息，剩余字节则用来包含具体的传输数据。
 选择UDP的时候需要谨慎。在网络质量很差的环境下，UDP协议数据包丢失会比较严重。但UDP属于无连接协议，具有资源消耗小，处理速度快，所以音频，视频和普通数据在传送是使用UDP比较多，因为即使偶尔丢失一两个数据包，也不会对接手结果产生太大影响。比如QQ就是采用UDP协议的。
 
 
 ICMP协议(Internet control message protocol,Internet 控制报文协议)
       为TCP/IP的子协议，用于IP主机，路由器间消息传递 控制消息。控制消息：网络通不通，主机是否可达，路由是否可用。这些控制消息虽然不传递用户数据，但对于用户数据传递起着基础和重要作用。
       ICMP是一种面向无连接的协议，用于传输出错报告控制信息。
       
       
TCP编程模型：C/S模式（Client/Server）
     PS： 一般来说，任何TCP程序，都需要先运行服务器端，再运行客户端
     
      (1)服务器端
         
         1）创建一个服务器端Socket,并指定一个端口号
         2）开始监听来自客户端的请求要求
         3）获取输入/输出
         4）调用输入/输出流的read()/write()方法，进行数据传输
         5）释放资源，关闭输入/输出流，Socket 和Sever Socket 对象
      (2)客户端
      
         1）创建Socket对象，建立与服务器端连接
         2）获得输入输出流
         3）调用输入，输出流的read()/write()，进行数据传输
         4）释放资源，关闭输入输出流，Socket对象
         
         
         


  UDP编程模型
         1）创建数据Socket，并制定端口号
         2）
         3）
         4）
         5）









