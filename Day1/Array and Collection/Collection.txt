面试题51： 什么是集合？
       集合是用来存储其他对象的对象，代表以一种底层结构，用于拓展数组功能。集合是由一系列接口和实现类组成。基本包括：List(列表)，Set(集合)，Map(映射)等， 大多都有可迭代性和可比性。
        ！！！！ 所有集合使用类，只能存放对象，若要存放基本数据类型，需要使用包装类，装箱与拆箱！！！！
        Collection:Set,List,Map；SortedSet,SortedMap
        List:有序存放，允许重复，可存放不同类型的对象。
        Set:无序存放，不允许重复，可存放不同类型对象。
        Map:键值对(Key_Value)
        
        
面试题52：    迭代器是什么？
       迭代就是将集合中所有元素遍历一遍。
       迭代器（Iterator）模式：游标（Cursor）模式：提供一个方法访问容器对象中各元素，而不需要暴露对象内部细节。
       迭代器是一个接口Iterator.实现了此接口的类：可迭代类，多至java.util包下集合类
       eg: 
              public class IteratorTest{
                     public static void main(String[] args)
                     {
                            List<String> list=new ArrayList<String>();//创建保存字符串的List对象
                            list.add("a");   //放入元素a
                            list.add("b");  //放入元素b
                            Iterator<String> it =list.iterator();//得到list的迭代器
                            while(it.hasNext())        //将迭代的下标移动一位，并取得当前位置的元素
                            {
                                   System.out.println(it.next());
                            }
                     }
              }
              PS: Java 5.0开始，可以用foreach循环替代，for(int i: arr){System.out.println(i);}本质上也是用Iterator 进行遍历
              迭代器提供一种访问一个集合对象中各个元素的途径。同时又不需要暴露该对象内部细节。Java使用Iterator 和Iterable 两个接口来实现集合类的可迭代性。迭代器主要的用法为，首先用hasNext()作为循环条件；再用next()得到每一个元素，最后再进行相关操作。              
   
   
  
  面试题53：      比较器是什么？Comparable 接口，Comparator接口
                    Comparable接口：定义对象的自然顺序，排序接口，只有一个。仅包含compareTo()方法
                    Comparator接口：定义用户定制的顺序，比较接口，可以有多个。compare()方法   
                    比较器是将集合或数组元素强行按照指定方法进行排序的对象，它是实现了Comparator接口类的实例。如果一个集合元素的类型是可比较的                      （实现了Comparable 接口），则它就具有了默认的排序方法，比较器则是强行改变其默认的比较方式来进行排序。或者有的集合元素不可比较
                   （没有实现Comparable 接口），则可用比较器来实现动态排序
 -----------------------------------------------------------------------------------------------------------------------        
                 eg:Comparable 接口demo
                     public class ComparableUser implements Comparable{
                            private String id;
                            private int age;
                            public ComparableUser(String id,int age)
                            {
                                   this.id=id;
                                   this.age=age;
                            }
                            public int getAge()
                            {
                                   return age;
                            }
                            public void setAget(int age)
                            {
                                   this.age=age;
                            }
                            public String getId()
                            {
                                   return id;
                            }
                            public String setId(String id)
                            {
                                   this.id=id;
                            }
                            public int compareTo(Object o)
                            {
                                   return this.age-((ComparableUser o).getAge());
                            }
                            
                            /** 测试方法**/
                            public static void main(String[] ags)
                            {
                                   ComparableUser user1=new ComparableUser("0x0001",24);
                                   ComparableUser user2=new ComparableUser("0x0002",25);
                                   if(user1.compareTo(user2)>0)
                                   {
                                          System.out.println("用户1大于用户2");
                                   }else if(user1.compareTo(user2)<0)
                                   {
                                          System.out.println("用户1小于用户2");
                                   }
                                   else{
                                          System.out.println("用户1等于用户2");
                                   }
                                    
                            }
                     }
--------------------------------------------------------------------------------------------------------------------------------
                     Comparator接口一般不会被集合元素类所实现，而单独实现或用匿名内部类的方式实现。以上代码用Comparator实现
                     public class ComparatorUser{
                     private String id;
                     private int age;
                     public User(String id,int age)
                     {
                            this.id=id;
                            this.age=age;
                     }
                     public void setId(String id)
                     {
                            this.id=id;
                     }
                     public String getId()
                     {
                            return id;
                     }
                     public void setAge(int age)
                     {
                            this.age=age;
                     }
                     public int getAge()
                     {
                            return age;
                     }
                     /**测试程序**/
                     public static void main(String[] args)
                     {
                            User user1=new User("0x00001",24);
                            User user2=new User("0x00002",25);
                            Comparator comp=new UserComparator();//生成结果比较器
                            int rst=comp.compare(user1,user2);
                            if(rst>0)
                            {
                                   System.out.println("用户1大于用户2");
                            }else if (rst<0)
                            {
                                   System.out.println("用户1小于用户2");
                            }else
                            {
                                   System.out.println("用户1等于用户2");
                            }
                     }
                     class UserComparator implements Comparator{  //比较器类
                            public int compare(Object arg0,,Object arg1) //比较方法
                            {
                                   User u1=(User) arg0;            //类型转换
                                   User u2=(User) arg1;
                                   return u1.getAge()-u2.getAge(); //结果
                            }
                     }
                     
