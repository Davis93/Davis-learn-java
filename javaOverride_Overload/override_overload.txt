override:重写，子类对父类可访问的方法的实现过程进行重写，返回值和形参都不能变。子类可以根据自己需要，实现父类方法；重写抛出的异常不能超过被重写异常：如父类的一个方法声明了IOException异常，重写的时候不能抛出Exception异常，而应该只能抛出IOException异常的子类。(Exception类是IOException的父类)

方法重写(override)规则:
(1)参数列表必须与被重写(父类方法)的一样，返回值也一样
(2)父类方法被声明为public,子类方法不能声明为protected;子类方法的访问权限不能比父类中同一方法低
(3)父类成员方法只能被其子类重写(override)
(4)被声明为final的方法，不能被重写(override)
(5)声明为static的方法不能重写，但是可以被再次声明（？？？？？？）
(6)子类和父类在同一个包中，子类可以重写父类中除final和private的方法外的所有方法；子类和父类不在同一个包中，子类可重写父类中非final的public,protected方法
(7)重写抛出的异常不能比被重写的范围大
(8)构造方法不能被重写
(9)若不能继承一个方法，则不能被重写


overload:重载 ,方法名相同，但是参数列表不同，不是以返回值来区分同一种方法

方法重载(overload)规则：
(1)重载的方法必须改变参数列表(参数个数或者顺序不同)
(2)重载的方法可以改变返回值类型
(3)重载的方法可以改变访问控制符
(4)重载的方法可以声明新的异常或者更广泛的异常检查
(5)方法可在同一个类中，或者子类中被重载


方法重载和方法重写，是java多态性的不同表现。
（1）方法重载是一个类的多态性的具体表现；方法重写是子类和父类的一种多态性表现
（）
（）
